به خاطر بزرگ و جهانی شدن پروژه ها نرم افرازی
نسل جدیدی از ورژن کنترل ها شکل گرفتن تا هم ضعف نسل ها قبل حل بشه
هم پروژها هم در سطح کلاس جهانی به کمک افراد مختلف مدیریت بشن

Third generation (about 200X - now)
+ decentralized
+ working tree (directories)
+ independent repository (git)

+ decentralized
به این معنی که سورس کد بین افراد مختلف یا سیستم ها مختلف قابل بخش هست
این مورد در بیشتر مورد توزیعی گفته میشه
Distributed
و ورژن کنترل های این نصل
DVCS (= Distributed Version Control System)
نامیده می شن

+ working tree (directories)
به این معنی که اون برنامه ورژن کنترل می تونه یک دایرکتوی
و ساب دایرکتوی ها زیر مجموعه رو یک جا ترک کنه

در نصل اول فقط یک فایل ممکن بود
در نسل دوم چند فایل ممکن بود
و در این نسل کل یک دایرکتوری رو میشه ترک کرد

+ independent repository (git)
آقای لاینس دید متفاوتی نسبت به بحث توزیع پذیری داشت
برنامه های مثل بیت کیپر هم توزیعی بودند اما ایشون
در آن زمان اعلام کرده بود که آنها واقعا توزیعی نیستند
و بعد از ایجاد شدن گیت از اون به عنوان
True Distributed Version Control System
نام مب بره که در ادامه پست ها متوجه این موضوع می شیم

در این ۶ پست خلاصه ی خیلی کوتاهی ار تاریخ ورژن کنترل ها رو مرور کردیم
در ادامه وارد بحث معماری و نحوه ی کارکرد اونها می شیم
Architecture
و تمرکزمون روی گیت هست و روی گیت مباحث رو جلو می بریم

بریم برای پست بعدی