از این پست به بعد وارد بحث معماری گیت میشم
و به روش از بالا به پایین یا تاپ-داون جلو می ریم
Top-Down Approach
در واقع از انتزاع کلی تر به سمت انتراع حزء تر میریم

در ساده ترین حالت ممکن در ورژن کنترل ها ۳ بخش داریم
یک > توسعه دهنده ها که با فایل های متنی کار می کنن - کدها
دو > اون عملیاتی که اون برنامه ورژن کنترل روی کدها (فایل متنی) انجام مبده
سه > دیتابیس ی برای نگه داری نتبجه

نحوه کار هم به این صورت هست که یک برنامه ورژن کنترل
کدها - فایل ها متنی رو از توسعه دهنده میگره و به روش خودش در دیتابیس ذخیره می کنه

این روش در گیت به صورت کی-ولیو هست که همه تون می دونید کی-ولیو چی هست
Key - Value Pair
و می دونید که کی-ولیو از طریق هش فانکش ها انجام میشه
Hash Functions
و هش فانکش ها در تولید و پیاده سازی ساختارهای داده استفاده می شن
Data Structure

بحث کی - ولیو در جاهای دیگه هم هست
مثلا در جاواسکریپت آبجکت هست
Object
در سی پلای پلاس مپ هست
Map
در پایتنون دیکشنری هست
Dictionary

گیت به کمک شا-وان و هش فانکشن های خودش این کی-ولیو ها رو میسازه
sha1 algorithm

و نتیحه در دیتابیس خود گیت که یک دایرکتوری مخفی هست ذخیره میشه
.git

چیزی که گیت در دیتابیس ذخیره میکنه رو به طور کلی آبجکت می گیم
Object
و این آبجکت ۴ توع داره
1. blob
2. tree
3. commit
4. tag

در واقع وقتی سورس کد ما وارد دیتابیس گبت میشه
یا بلاب هست
یا تری هست
یا کامیت هست
یا تگ هست

نگران درک این مفهوم ها هم نباشید
در ادامه همه رو تک به تک عملا تست می کنیم

بریم برای پس بعدی